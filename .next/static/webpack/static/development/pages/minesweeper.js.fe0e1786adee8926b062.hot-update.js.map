{"version":3,"file":"static/webpack/static\\development\\pages\\minesweeper.js.fe0e1786adee8926b062.hot-update.js","sources":["webpack:///./Games/minesweeper/index.js","webpack:///./pages/minesweeper.js"],"sourcesContent":["const difficulty = document.querySelector('select')\r\nconst timerHundreds = document.querySelector('.timer-hundreds')\r\nconst timerTens = document.querySelector('.timer-tens')\r\nconst timerOnes = document.querySelector('.timer-ones')\r\nconst minesHundreds = document.querySelector('.mines-hundreds')\r\nconst minesTens = document.querySelector('.mines-tens')\r\nconst minesOnes = document.querySelector('.mines-ones')\r\nlet game = []\r\nlet mHundreds = 0\r\nlet mTens = 0\r\nlet mOnes = 0\r\nlet hundreds = 0\r\nlet tens = 0\r\nlet ones = 0\r\nlet fireworksId\r\nlet timerId\r\nlet mines\r\n\r\n\r\n//GAME SETUP FUNCTIONS\r\n\r\nconst newGame = () => {\r\n  clearInterval(fireworksId)\r\n  clearInterval(timerId)\r\n  timerId = undefined\r\n  game = []\r\n  hundreds = 0\r\n  tens = 0\r\n  ones = 0\r\n  timerHundreds.innerText = 0\r\n  timerTens.innerText = 0\r\n  timerOnes.innerText = 0\r\n  const playArea = document.getElementById('play-area')\r\n  playArea.innerHTML = ''\r\n  playArea.classList = ''\r\n  if (difficulty.value === 'easy') {\r\n    mines = 10\r\n    mHundreds = 0\r\n    mTens = 1\r\n    mOnes = 0\r\n    minesHundreds.innerText = 0\r\n    minesTens.innerText = 1\r\n    minesOnes.innerText = 0\r\n    playArea.classList.add('easy')\r\n    getSquares(81)\r\n\r\n    getMines(10, game.length)\r\n\r\n\r\n\r\n    game.forEach(element => {\r\n      playArea.append(element)\r\n    })\r\n  } else if (difficulty.value === 'medium') {\r\n    mines = 40\r\n    mHundreds = 0\r\n    mTens = 4\r\n    mOnes = 0\r\n    minesHundreds.innerText = 0\r\n    minesTens.innerText = 4\r\n    minesOnes.innerText = 0\r\n    playArea.classList.add('medium')\r\n    getSquares(256)\r\n\r\n    getMines(40, game.length)\r\n\r\n    game.forEach(element => {\r\n      playArea.append(element)\r\n    })\r\n  } else if (difficulty.value === 'hard') {\r\n    mines = 99\r\n    mHundreds = 0\r\n    mTens = 9\r\n    mOnes = 9\r\n    minesHundreds.innerText = 0\r\n    minesTens.innerText = 9\r\n    minesOnes.innerText = 9\r\n    playArea.classList.add('hard')\r\n    getSquares(480)\r\n\r\n    getMines(99, game.length)\r\n\r\n    game.forEach(element => {\r\n      playArea.append(element)\r\n    })\r\n  }\r\n}\r\n\r\nconst getSquares = (count) => {\r\n  let id = 0\r\n  for (let i = 0; i < count; i++) {\r\n    let newSquare = document.createElement('div')\r\n    newSquare.classList.add('game-square')\r\n    newSquare.id = id\r\n    newSquare.addEventListener('auxclick', rightClick)\r\n    newSquare.addEventListener('click', leftClick)\r\n    game.push(newSquare)\r\n    id++\r\n  }\r\n}\r\n\r\nconst getMines = (numMines, length) => {\r\n  const minesIndex = []\r\n  while (numMines > 0) {\r\n    let newMine = Math.floor(Math.random() * length)\r\n    let index = minesIndex.findIndex(element => element === newMine)\r\n    if (index === -1) {\r\n      minesIndex.push(newMine)\r\n      numMines--\r\n    }\r\n  }\r\n\r\n  minesIndex.forEach(element => {\r\n    let square = game[element]\r\n    square.addEventListener('click', lose)\r\n    square.classList.add('mine-square')\r\n    // square.innerHTML = `<img class='icon' src='./Assets/mine.ico' />`\r\n  })\r\n\r\n  return minesIndex\r\n}\r\n\r\n\r\n//CLICK FUNCTIONS\r\n\r\nconst leftClick = (e) => {\r\n  click(+e.srcElement.id)\r\n}\r\n\r\nconst click = (id, callingSquare) => {\r\n  if (!timerId) {\r\n    timerId = setInterval(() => {\r\n      timer()\r\n    }, 1000);\r\n  }\r\n  let num = 0\r\n  let square = document.getElementById(+id)\r\n  let checks\r\n  square.classList.add('clicked')\r\n\r\n  if (square.classList.contains('mine-square')) {\r\n    lose()\r\n    return\r\n  }\r\n\r\n  switch (difficulty.value) {\r\n    case 'easy':\r\n      checks = getChecks('easy', id)\r\n      break;\r\n    case 'medium':\r\n      checks = getChecks('medium', id)\r\n      break\r\n    case 'hard':\r\n      checks = getChecks('hard', id)\r\n      break\r\n    default:\r\n      return console.log('error')\r\n  }\r\n\r\n  checks.corners.forEach(element => {\r\n    if (element && element.classList.contains('mine-square')) {\r\n      num++\r\n    }\r\n  })\r\n\r\n  checks.squareChecks.forEach(element => {\r\n    if (element && element.classList.contains('mine-square')) {\r\n      num++\r\n    }\r\n  })\r\n\r\n  checks.squareChecks.forEach(element => {\r\n    if (num === 0 && element && !element.classList.contains('clicked')) {\r\n      click(+element.id, +id)\r\n    }\r\n  })\r\n\r\n  if (num !== 0) {\r\n    square.innerText = num\r\n    switch (num) {\r\n      case 1:\r\n        square.style.color = '#0000ff'\r\n        break;\r\n      case 2:\r\n        square.style.color = '#007b00'\r\n        break\r\n      case 3:\r\n        square.style.color = '#ff0000'\r\n        break\r\n      case 4:\r\n        square.style.color = '#00007b'\r\n        break\r\n      case 5:\r\n        square.style.color = '#800000'\r\n        break\r\n      case 6:\r\n        square.style.color = '#007b7b'\r\n        break\r\n      case 7:\r\n        square.style.color = '#000000'\r\n        break\r\n      case 8:\r\n        square.style.color = '#7b7b7b'\r\n        break\r\n      default:\r\n        square.style.color = 'c0c0c0'\r\n    }\r\n  }\r\n  return num\r\n}\r\n\r\nconst getChecks = (difficulty, id) => {\r\n  let squareChecks = []\r\n  const corners = []\r\n  switch (difficulty) {\r\n    case 'easy':\r\n      const easyLeft = [9, 18, 27, 36, 45, 54, 63]\r\n      const easyRight = [17, 26, 35, 44, 53, 62, 71]\r\n      const easyTop = [1, 2, 3, 4, 5, 6, 7]\r\n      const easyBottom = [73, 74, 75, 76, 77, 78, 79]\r\n\r\n      switch (+id) {\r\n        case 0:\r\n          corners.push(game[10])\r\n          squareChecks.push(game[1], game[9])\r\n          break;\r\n        case 72:\r\n          corners.push(game[64])\r\n          squareChecks.push(game[63], game[73])\r\n          break;\r\n        case 8:\r\n          corners.push(game[16])\r\n          squareChecks.push(game[7], game[17])\r\n          break;\r\n        case 80:\r\n          corners.push(game[70])\r\n          squareChecks.push(game[71], game[79])\r\n          break;\r\n        default:\r\n          if (easyLeft.includes(+id)) {\r\n            squareChecks.push(game[id + 1], game[id - 9], game[id + 9])\r\n            corners.push(game[+id - 8], game[+id + 10])\r\n          } else if (easyRight.includes(+id)) {\r\n            squareChecks.push(game[id - 1], game[id - 9], game[id + 9])\r\n            corners.push(game[+id - 10], game[+id + 8])\r\n          } else if (easyTop.includes(+id)) {\r\n            squareChecks.push(game[+id - 1], game[+id + 1], game[+id + 9])\r\n            corners.push(game[+id + 8], game[+id + 10])\r\n          } else if (easyBottom.includes(+id)) {\r\n            squareChecks.push(game[+id - 1], game[+id + 1], game[+id - 9])\r\n            corners.push(game[+id - 10], game[+id - 8])\r\n          } else {\r\n            squareChecks.push(game[id - 1], game[id + 1], game[id - 9], game[id + 9])\r\n            corners.push(game[id - 10], game[id - 8], game[id + 8], game[id + 10])\r\n          }\r\n      }\r\n      break;\r\n    case 'medium':\r\n      const mediumLeft = [16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224]\r\n      const mediumRight = [31, 47, 63, 79, 95, 111, 127, 143, 159, 175, 191, 207, 223, 239]\r\n      const mediumTop = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\r\n      const mediumBottom = [241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254]\r\n\r\n      switch (+id) {\r\n        case 0:\r\n          corners.push(game[17])\r\n          squareChecks.push(game[1], game[16])\r\n          break;\r\n        case 240:\r\n          corners.push(game[225])\r\n          squareChecks.push(game[224], game[241])\r\n          break;\r\n        case 15:\r\n          corners.push(game[30])\r\n          squareChecks.push(game[14], game[31])\r\n          break;\r\n        case 255:\r\n          corners.push(game[238])\r\n          squareChecks.push(game[239], game[254])\r\n          break;\r\n        default:\r\n          if (mediumLeft.includes(+id)) {\r\n            squareChecks.push(game[id + 1], game[id - 16], game[id + 16])\r\n            corners.push(game[+id - 15], game[+id + 17])\r\n          } else if (mediumRight.includes(+id)) {\r\n            squareChecks.push(game[id - 1], game[id - 16], game[id + 16])\r\n            corners.push(game[+id - 17], game[+id + 15])\r\n          } else if (mediumTop.includes(+id)) {\r\n            squareChecks.push(game[+id - 1], game[+id + 1], game[+id + 16])\r\n            corners.push(game[+id + 17], game[+id + 15])\r\n          } else if (mediumBottom.includes(+id)) {\r\n            squareChecks.push(game[+id - 1], game[+id + 1], game[+id - 16])\r\n            corners.push(game[+id - 17], game[+id - 15])\r\n          } else {\r\n            squareChecks.push(game[id - 1], game[id + 1], game[id - 16], game[id + 16])\r\n            corners.push(game[id - 17], game[id - 15], game[id + 15], game[id + 17])\r\n          }\r\n      }\r\n      break\r\n    case 'hard':\r\n      const hardLeft = [0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 360, 390, 420, 450]\r\n      const hardRight = [29, 59, 89, 119, 149, 179, 209, 239, 269, 299, 329, 359, 389, 419, 449, 479]\r\n      const hardTop = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]\r\n      const hardBottom = [451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478]\r\n\r\n      switch (+id) {\r\n        case 0:\r\n          corners.push(game[31])\r\n          squareChecks.push(game[1], game[30])\r\n          break;\r\n        case 450:\r\n          corners.push(game[421])\r\n          squareChecks.push(game[420], game[451])\r\n          break;\r\n        case 29:\r\n          corners.push(game[58])\r\n          squareChecks.push(game[28], game[59])\r\n          break;\r\n        case 479:\r\n          corners.push(game[448])\r\n          squareChecks.push(game[449], game[478])\r\n          break;\r\n        default:\r\n          if (hardLeft.includes(+id)) {\r\n            squareChecks.push(game[id + 1], game[id - 30], game[id + 30])\r\n            corners.push(game[+id - 29], game[+id + 31])\r\n          } else if (hardRight.includes(+id)) {\r\n            squareChecks.push(game[id - 1], game[id - 30], game[id + 30])\r\n            corners.push(game[+id - 31], game[+id + 29])\r\n          } else if (hardTop.includes(+id)) {\r\n            squareChecks.push(game[+id - 1], game[+id + 1], game[+id + 30])\r\n            corners.push(game[+id + 29], game[+id + 31])\r\n          } else if (hardBottom.includes(+id)) {\r\n            squareChecks.push(game[+id - 1], game[+id + 1], game[+id - 30])\r\n            corners.push(game[+id - 29], game[+id - 31])\r\n          } else {\r\n            squareChecks.push(game[id - 1], game[id + 1], game[id - 30], game[id + 30])\r\n            corners.push(game[id - 31], game[id - 29], game[id + 29], game[id + 31])\r\n          }\r\n      }\r\n      break\r\n    default:\r\n      console.log('error')\r\n  }\r\n\r\n  return {\r\n    squareChecks,\r\n    corners\r\n  }\r\n}\r\n\r\nconst rightClick = (e) => {\r\n  const square = document.getElementById(+e.target.id)\r\n  square.classList.add('flag-square')\r\n  square.removeEventListener('click', lose)\r\n  square.removeEventListener('click', leftClick)\r\n  square.removeEventListener('auxclick', rightClick)\r\n  square.addEventListener('auxclick', questionMark)\r\n  square.innerHTML = `<img class='icon' src='./Assets/flag.png' />`\r\n  minesDown()\r\n}\r\n\r\nconst questionMark = (e) => {\r\n  const square = document.getElementById(+e.target.parentElement.id)\r\n  square.innerHTML = `<img class='icon' src='./Assets/question.png' />`\r\n  square.removeEventListener('auxclick', questionMark)\r\n  square.addEventListener('auxclick', remove)\r\n  minesUp()\r\n}\r\n\r\nconst remove = (e) => {\r\n  const square = document.getElementById(+e.target.parentElement.id)\r\n  square.addEventListener('click', leftClick)\r\n  square.addEventListener('auxclick', rightClick)\r\n  square.removeEventListener('auxclick', remove)\r\n  square.innerHTML = ''\r\n  if (square.classList.contains('mine-square')) {\r\n    square.addEventListener('click', lose)\r\n  }\r\n}\r\n\r\nconst checkWin = () => {\r\n  let minesIds = []\r\n  let flagsIds = []\r\n  const mines = document.getElementsByClassName('mine-square')\r\n  const flags = document.getElementsByClassName('flag-square')\r\n  for (let i = 0; i < flags.length; i++) {\r\n    minesIds.push(+mines[i].id)\r\n    flagsIds.push(+flags[i].id)\r\n  }\r\n\r\n  let winCon = true\r\n  console.log(minesIds)\r\n  console.log(flagsIds)\r\n\r\n  minesIds.sort()\r\n  flagsIds.sort()\r\n  minesIds.forEach((element, index) => {\r\n    if (element !== flagsIds[index]) {\r\n      winCon = false\r\n    }\r\n  })\r\n\r\n  if (winCon) {\r\n    const squares = document.getElementsByClassName('game-square')\r\n    for (let i = 0; i < squares.length; i++) {\r\n      let square = squares[i]\r\n      square.removeEventListener('click', leftClick)\r\n      square.removeEventListener('click', lose)\r\n      square.removeEventListener('auxclick', rightClick)\r\n      square.removeEventListener('auxclick', questionMark)\r\n      square.removeEventListener('auxclick', remove)\r\n    }\r\n    clearInterval(timerId)\r\n    fireworksId = setInterval(() => {\r\n      fireworks()\r\n    }, 100);\r\n\r\n  } else {\r\n    alert('You got some wrong')\r\n    const squares = document.getElementsByClassName('game-square')\r\n    for (let i = 0; i < squares.length; i++) {\r\n      let square = squares[i]\r\n      square.removeEventListener('click', leftClick)\r\n      square.removeEventListener('click', lose)\r\n      square.removeEventListener('auxclick', rightClick)\r\n      square.removeEventListener('auxclick', questionMark)\r\n      square.removeEventListener('auxclick', remove)\r\n    }\r\n    clearInterval(timerId)\r\n  }\r\n}\r\n\r\n//GAME END FUNCTIONS\r\n\r\nconst lose = () => {\r\n  clearInterval(timerId)\r\n  let mineSquares = document.getElementsByClassName('mine-square')\r\n  for (let i = 0; i < mineSquares.length; i++) {\r\n    mineSquares[i].innerHTML = `<img class='icon' src='./Assets/mine.ico' />`\r\n    mineSquares[i].classList.add('mine-lose')\r\n  }\r\n  const squares = document.getElementsByClassName('game-square')\r\n    for (let i = 0; i < squares.length; i++) {\r\n      let square = squares[i]\r\n      square.removeEventListener('click', leftClick)\r\n      square.removeEventListener('click', lose)\r\n      square.removeEventListener('auxclick', rightClick)\r\n      square.removeEventListener('auxclick', questionMark)\r\n      square.removeEventListener('auxclick', remove)\r\n    }\r\n    clearInterval(timerId)\r\n}\r\n\r\nconst fireworks = () => {\r\n  const screen = document.querySelector('.holder')\r\n  let startingLocation = Math.floor(Math.random() * window.innerWidth)\r\n  let color1 = Math.floor(Math.random() * 255)\r\n  let color2 = Math.floor(Math.random() * 255)\r\n  let color3 = Math.floor(Math.random() * 255)\r\n  let trail = document.createElement('div')\r\n  trail.classList.add('firework-trail')\r\n  trail.style.background = `rgb(${color1}, ${color2}, ${color3})`\r\n  trail.style.left = `${startingLocation - 5}px`\r\n  trail.addEventListener('animationend', (e) => {\r\n    e.target.remove()\r\n    let angle = 0\r\n    for (let i = 0; i < 12; i++) {\r\n      let spark = document.createElement('div')\r\n      spark.classList.add('spark')\r\n      spark.style.background = `rgb(${color1}, ${color2}, ${color3})`\r\n      spark.style.transform = `rotate(${angle}deg)`\r\n      spark.style.left = `${startingLocation - 5}px`\r\n      spark.addEventListener('animationend', (e) => {\r\n        e.target.remove()\r\n      })\r\n      screen.appendChild(spark)\r\n\r\n      angle += 15\r\n    }\r\n  })\r\n  screen.appendChild(trail)\r\n}\r\n\r\n//TRACKING FUNCTIONS\r\n\r\nconst timer = () => {\r\n  ones++\r\n  if (ones === 10) {\r\n    tens++\r\n    ones = 0\r\n    if (tens === 10) {\r\n      hundreds++\r\n      tens = 0\r\n    }\r\n  }\r\n  timerHundreds.innerText = hundreds\r\n  timerTens.innerText = tens\r\n  timerOnes.innerText = ones\r\n}\r\n\r\nconst minesDown = () => {\r\n  mOnes--\r\n  if (mOnes === -1) {\r\n    mTens--\r\n    mOnes = 9\r\n    if (mTens === -1) {\r\n      mHundreds--\r\n      mTens = 9\r\n    }\r\n  }\r\n  minesHundreds.innerText = mHundreds\r\n  minesTens.innerText = mTens\r\n  minesOnes.innerText = mOnes\r\n  if (mOnes === 0 && mTens === 0 && mHundreds === 0) {\r\n    checkWin()\r\n  }\r\n}\r\n\r\nconst minesUp = () => {\r\n  mOnes++\r\n  if (mOnes === 10) {\r\n    mTens++\r\n    mOnes = 0\r\n    if (mTens === 10) {\r\n      mHundreds++\r\n      mTens = 0\r\n    }\r\n  }\r\n  minesHundreds.innerText = mHundreds\r\n  minesTens.innerText = mTens\r\n  minesOnes.innerText = mOnes\r\n}\r\n\r\n\r\nnewGame()","import React from 'react'\r\nimport MinesweeperApp from '../Games/minesweeper/index'\r\n\r\n\r\nconst Minesweeper = (props) => {\r\n  return (\r\n    <>\r\n    </>\r\n  )\r\n}\r\nexport default Minesweeper\r\n\r\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AARA;AACA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAXA;AACA;AAaA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AA1BA;AA4BA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AACA;AAkCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AACA;AAkCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AACA;AAkCA;AACA;AAAA;AACA;AAhIA;AACA;AAkIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;ACvhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAAA;;;;A","sourceRoot":""}